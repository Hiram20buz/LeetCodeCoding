class Solution(object):
    # function to get unique values 
    def unique(self,list1):
        
     
        # initialize a null list
        unique_list = []
     
        # traverse for all elements
        for x in list1:
            # check if exists in unique_list or not
            if x not in unique_list:
                unique_list.append(x)
        return unique_list
        
        
    def substrings(self,test_str):
        res = [test_str[i: j] for i in range(len(test_str))
                  for j in range(i + 1, len(test_str) + 1)]
                  
        return res
        
        
    def sInString(self,a,b):
        if a in b:
            return len(a)
        else:
            return -1
        
        
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        list1 = list(s)
        #list with unique values
        palabra=self.unique(list1)
        
        texto = ''.join(palabra)
        print(self.substrings(texto))
        maxi=[]
        for letter in self.substrings(texto):
            maxi.append(self.sInString(letter,s))
            
        maximo=0
 
        try: 
            maximo = max(maxi)
            #print(maximo)
        except:
            print('Input Sequence is Empty')
        return maximo
        
        
a=Solution().lengthOfLongestSubstring("dvdf")

print(a)
